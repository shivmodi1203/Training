---
- name: Set up Kubernetes Cluster with containerd and Calico
  hosts: all
  become: yes
  tasks:
    - name: Load kernel modules for containerd
      block:
        - name: Create /etc/modules-load.d/containerd.conf file
          copy:
            dest: /etc/modules-load.d/containerd.conf
            content: |
              overlay
              br_netfilter

        - name: Load overlay kernel module
          modprobe:
            name: overlay
            state: present

        - name: Load br_netfilter kernel module
          modprobe:
            name: br_netfilter
            state: present

    - name: Set system configurations for Kubernetes
      block:
        - name: Create sysctl config for Kubernetes
          copy:
            dest: /etc/sysctl.d/99-kubernetes-cri.conf
            content: |
              net.bridge.bridge-nf-call-iptables = 1
              net.ipv4.ip_forward = 1
              net.bridge.bridge-nf-call-ip6tables = 1

        - name: Apply sysctl settings
          command: sysctl --system

    - name: Install containerd
      block:
        - name: Update apt package index
          apt:
            update_cache: yes

        - name: Install containerd
          apt:
            name: containerd
            state: present

        - name: Create containerd configuration directory
          file:
            path: /etc/containerd
            state: directory

        - name: Generate containerd default configuration
          shell: "containerd config default | tee /etc/containerd/config.toml"

        - name: Set SystemdCgroup to true in containerd config
          replace:
            path: /etc/containerd/config.toml
            regexp: '^SystemdCgroup = false'
            replace: 'SystemdCgroup = true'

        - name: Restart containerd
          systemd:
            name: containerd
            state: restarted
            enabled: yes

    - name: Disable swap
      command: swapoff -a

    - name: Install Kubernetes tools
      block:
        - name: Install apt-transport-https and curl
          apt:
            name:
              - apt-transport-https
              - curl
            state: present

        - name: Download Kubernetes GPG key using curl
          shell: "curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.27/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
          args:
            creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

        - name: Create Kubernetes apt repository
          copy:
            dest: /etc/apt/sources.list.d/kubernetes.list
            content: |
              deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.27/deb/ /

        - name: Update apt package index
          apt:
            update_cache: yes

        - name: Install kubelet, kubeadm, and kubectl
          apt:
            name:
              - kubelet
              - kubeadm
              - kubectl
            state: present

        # - name: Mark Kubernetes packages to hold
        #   apt:
        #     name:
        #       - kubelet
        #       - kubeadm
        #       - kubectl
        #     state: present
        #     allow_downgrade: no
        #     force: yes
        #     mark: hold

- name: Initialize Kubernetes Cluster
  hosts: master
  become: yes
  tasks:
    - name: Initialize Kubernetes using kubeadm
      command: kubeadm init --pod-network-cidr 192.168.0.0/16 --kubernetes-version 1.27.11
      register: kubeadm_init

    - name: Create .kube directory for user
      file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        mode: 0755

    - name: Copy kubeconfig to user home directory
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        mode: 0644
    
    - name: Change kubeconfig file permission
      file:
        path: /home/{{ ansible_user }}/.kube/config 
        owner: "{{ ansible_effective_user_id }}"
        group: "{{ ansible_effective_group_id }}"

    - name: Install Calico networking plugin
      command: "kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml"
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config

- name: Join Worker Nodes to Cluster
  hosts: worker
  become: yes
  tasks:
    - name: Join worker node to cluster
      command: "{{ hostvars['master']['kubeadm_init']['stdout_lines'] | select('search', 'kubeadm join') | list | join(' ') }}"
      args:
        creates: /etc/kubernetes/kubelet.conf